<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BdayDatepicker.Icon" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAM5JREFUSEvV
        lUEKwjAQResdvFovUMGjibjowr3gWVy49gZPpiZSx/ymUxfFB1mY57xCA03TrAWwt+X3MzVfBbja8vuZ
        mi8CtMAxDT9yANgC5xyd8Dbb+u4A0PHiNgpckpv7AJs1Ot+3P/XAHdik35OvoORtNjX68X6WHwO1Q1Te
        d+oiiOxIEUR2khgO7sf1PvxVHvAtgsiOFEFkR4ogsiNFENmRIojsSBFEdqQIIjtSBJEd/zVdQu1runP3
        wZKl7wMj3WinwuDcdZA32t/yBBdLpxFwVvUkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEkKBABICwQBRwoEAS8OAABTCAYALAYAAHgCAQBICQQBSggFAEwLBwBLCwYBRA0FAEkK
        BABJCgQARwoFAQAeGgAuEgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAARwwGAEYMBxZGDAYcSQoHCEsLBkFLCwZITAsFK0sLBjZKDAY5SQsFHUsKBkNNCwY1SgwHLUwL
        B0pLCwVASwoEIEsKBi9LCgVGRwsHDkcLBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AranSAYbqUkEAEY0RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABiUD0AqkkDAKdK
        BxWqSgODrEoB361KAfqtSgD+rEoB9qtJAsepSQRPl0cQAnA4KQCpSQRDrEoBv61KAfStSgD+rUoB+6xK
        AeOqSgOOpUoFGqpLAgB+QxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAo0kKAKFJDQKoSgUiqUoETKtKA1qpSgRCo0kHE+9kAACaQxMAkkcVALhLAACnSQUQqUoEPatK
        A1mqSgRPp0oFJqVJCwSmSggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////Pbv/+AAB//gAAf/4AAH/+PD////gf///g
        D///wAP//4AB//8AAP/+AAB//gAAf/wAAD/8AQA/+AEAH/gHgB/4AQAf+AEAH/gBAB/4AAAf/AAAH/wA
        AD/+AIB//wPA//////////////////////8=
</value>
  </data>
</root>